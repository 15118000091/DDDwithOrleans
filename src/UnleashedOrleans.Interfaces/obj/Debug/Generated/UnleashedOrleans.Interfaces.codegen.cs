//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#if !EXCLUDE_CODEGEN
#pragma warning disable 162
#pragma warning disable 219
#pragma warning disable 693
#pragma warning disable 1591
#pragma warning disable 1998

namespace UnleashedOrleans.Interfaces.Sales
{
    using System;
    using System.Net;
    using System.Runtime.Serialization;
    using System.Runtime.Serialization.Formatters.Binary;
    using System.IO;
    using System.Collections.Generic;
    using Orleans;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SalesInvoiceGrainFactory
    {
        

                        public static ISalesInvoiceGrain GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesInvoiceGrain), 60208697, primaryKey));
                        }

                        public static ISalesInvoiceGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesInvoiceGrain), 60208697, primaryKey, grainClassNamePrefix));
                        }

                        public static ISalesInvoiceGrain GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesInvoiceGrain), 60208697, primaryKey));
                        }

                        public static ISalesInvoiceGrain GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesInvoiceGrain), 60208697, primaryKey, grainClassNamePrefix));
                        }

            public static ISalesInvoiceGrain Cast(IAddressable grainRef)
            {
                
                return SalesInvoiceGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("UnleashedOrleans.Interfaces.Sales.ISalesInvoiceGrain")]
        internal class SalesInvoiceGrainReference : Orleans.GrainReference, ISalesInvoiceGrain, Orleans.IAddressable
        {
            

            public static ISalesInvoiceGrain Cast(IAddressable grainRef)
            {
                
                return (ISalesInvoiceGrain) GrainReference.CastInternal(typeof(ISalesInvoiceGrain), (GrainReference gr) => { return new SalesInvoiceGrainReference(gr);}, grainRef, 60208697);
            }

                protected override int InterfaceId { get { return 60208697; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "UnleashedOrleans.Interfaces.Sales.ISalesInvoiceGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return SalesInvoiceGrainMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal SalesInvoiceGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SalesInvoiceGrainReference input = ((SalesInvoiceGrainReference)(original));
                return ((SalesInvoiceGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SalesInvoiceGrainReference input = ((SalesInvoiceGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SalesInvoiceGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("UnleashedOrleans.Interfaces.Sales.ISalesInvoiceGrain", 60208697)]
    internal class SalesInvoiceGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 60208697;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 60208697:  // ISalesInvoiceGrain
                        switch (methodId)
                        {
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 60208697:  // ISalesInvoiceGrain
                    switch (methodId)
                    {
                        case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SalesInvoiceGrainProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SalesOrderGrainFactory
    {
        

                        public static ISalesOrderGrain GetGrain(long primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesOrderGrain), 457137758, primaryKey));
                        }

                        public static ISalesOrderGrain GetGrain(long primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesOrderGrain), 457137758, primaryKey, grainClassNamePrefix));
                        }

                        public static ISalesOrderGrain GetGrain(Guid primaryKey)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesOrderGrain), 457137758, primaryKey));
                        }

                        public static ISalesOrderGrain GetGrain(Guid primaryKey, string grainClassNamePrefix)
                        {
                            return Cast(GrainFactoryBase.MakeGrainReferenceInternal(typeof(ISalesOrderGrain), 457137758, primaryKey, grainClassNamePrefix));
                        }

            public static ISalesOrderGrain Cast(IAddressable grainRef)
            {
                
                return SalesOrderGrainReference.Cast(grainRef);
            }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
        [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
        [System.SerializableAttribute()]
        [Orleans.GrainReferenceAttribute("UnleashedOrleans.Interfaces.Sales.ISalesOrderGrain")]
        internal class SalesOrderGrainReference : Orleans.GrainReference, ISalesOrderGrain, Orleans.IAddressable
        {
            

            public static ISalesOrderGrain Cast(IAddressable grainRef)
            {
                
                return (ISalesOrderGrain) GrainReference.CastInternal(typeof(ISalesOrderGrain), (GrainReference gr) => { return new SalesOrderGrainReference(gr);}, grainRef, 457137758);
            }

                protected override int InterfaceId { get { return 457137758; } }

                public override bool IsCompatible(int interfaceId) { return interfaceId == this.InterfaceId; }

                protected override string InterfaceName { get { return "UnleashedOrleans.Interfaces.Sales.ISalesOrderGrain"; } }

                protected override string GetMethodName(int interfaceId, int methodId) { return SalesOrderGrainMethodInvoker.GetMethodName(interfaceId, methodId); }
            
            protected internal SalesOrderGrainReference(GrainReference reference) : 
                    base(reference)
            {
            }
            
            [Orleans.CopierMethodAttribute()]
            public static object _Copier(object original)
            {
                SalesOrderGrainReference input = ((SalesOrderGrainReference)(original));
                return ((SalesOrderGrainReference)(GrainReference.CopyGrainReference(input)));
            }
            
            [Orleans.SerializerMethodAttribute()]
            public static void _Serializer(object original, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
            {
                SalesOrderGrainReference input = ((SalesOrderGrainReference)(original));
                GrainReference.SerializeGrainReference(input, stream, expected);
            }
            
            [Orleans.DeserializerMethodAttribute()]
            public static object _Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
            {
                return SalesOrderGrainReference.Cast(((Orleans.GrainReference)(GrainReference.DeserializeGrainReference(expected, stream))));
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder command)
            {

                return base.InvokeMethodAsync<object>(-742911426, new object[] {command}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine c)
            {

                return base.InvokeMethodAsync<object>(-288536364, new object[] {c}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine c)
            {

                return base.InvokeMethodAsync<object>(701964691, new object[] {c}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax c)
            {

                return base.InvokeMethodAsync<object>(629677748, new object[] {c}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson c)
            {

                return base.InvokeMethodAsync<object>(-2088311088, new object[] {c}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse c)
            {

                return base.InvokeMethodAsync<object>(-1826483221, new object[] {c}, TimeSpan.Zero );
            }
            
            public System.Threading.Tasks.Task Execute(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder c)
            {

                return base.InvokeMethodAsync<object>(2023174979, new object[] {c}, TimeSpan.Zero );
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    [Orleans.MethodInvokerAttribute("UnleashedOrleans.Interfaces.Sales.ISalesOrderGrain", 457137758)]
    internal class SalesOrderGrainMethodInvoker : IGrainMethodInvoker
    {
        
        public int InterfaceId
        {
            get
            {
                return 457137758;
            }
        }
        
        public async System.Threading.Tasks.Task<Object> Invoke(IAddressable grain, int interfaceId, int methodId, object[] arguments)
        {
                if (grain == null) throw new System.ArgumentNullException("grain");
                switch (interfaceId)
                {
                    case 457137758:  // ISalesOrderGrain
                        switch (methodId)
                        {
                            case -742911426: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder)arguments[0]);
                              return true;
                            case -288536364: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine)arguments[0]);
                              return true;
                            case 701964691: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine)arguments[0]);
                              return true;
                            case 629677748: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax)arguments[0]);
                              return true;
                            case -2088311088: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson)arguments[0]);
                              return true;
                            case -1826483221: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse)arguments[0]);
                              return true;
                            case 2023174979: 
                                await ((ISalesOrderGrain)grain).Execute((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder)arguments[0]);
                              return true;
                            default: 
                                throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                        }
                    default:
                        throw new System.InvalidCastException("interfaceId="+interfaceId);
                }
        }
        
        public static string GetMethodName(int interfaceId, int methodId)
        {

            switch (interfaceId)
            {
                
                case 457137758:  // ISalesOrderGrain
                    switch (methodId)
                    {
                        case -742911426:
                            return "Execute";
                    case -288536364:
                            return "Execute";
                    case 701964691:
                            return "Execute";
                    case 629677748:
                            return "Execute";
                    case -2088311088:
                            return "Execute";
                    case -1826483221:
                            return "Execute";
                    case 2023174979:
                            return "Execute";
                    case -606142484:
                            return "GetProperties";
                    
                        default: 
                            throw new NotImplementedException("interfaceId="+interfaceId+",methodId="+methodId);
                    }

                default:
                    throw new System.InvalidCastException("interfaceId="+interfaceId);
            }
        }
    }
    
    [Serializable()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Orleans-CodeGenerator", "1.0.814.60418")]
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute()]
    public class SalesOrderGrainProperties
    {
        

            public Dictionary<string,object> AsDictionary()
            {  
                var retValue = new Dictionary<string,object>();
                return retValue;
            }
    }
}
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UnleashedOrleans.InterfacesSerializers
{
    using System;
    using System.Collections.Generic;
    using System.Reflection;
    using Orleans.Serialization;
    using UnleashedDDD.Contracts.Sales.SalesOrder.Commands;
    using UnleashedDDD.Contracts;
    using System.Collections;
    using System.Runtime.InteropServices;
    using System.Runtime.Serialization;
    
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_CreateNewSalesOrderSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_CreateNewSalesOrderSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.CustomerId)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SalesOrderId)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.UserId)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.WarehouseId)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.CustomerId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SalesOrderId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.UserId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.WarehouseId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder).GetField("<CustomerId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder).GetField("<SalesOrderId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(UnleashedDDD.Contracts.AuditableCommand).GetField("<UserId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CreateNewSalesOrder).GetField("<WarehouseId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_AddLineSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        private static System.Reflection.FieldInfo fieldInfo3;
        
        private static System.Reflection.FieldInfo fieldInfo4;
        
        private static System.Reflection.FieldInfo fieldInfo5;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_AddLineSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Price)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Price)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.ProductId)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Decimal)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Quantity)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SalesOrderId)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Tax)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Tax)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Price, stream, typeof(Price));
            Orleans.Serialization.SerializationManager.SerializeInner(input.ProductId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Quantity, stream, typeof(Decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SalesOrderId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Tax, stream, typeof(Tax));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine))));
            object objResult = ((object)(result));
            object temp1 = ((Price)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Price), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            object temp3 = ((Decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Decimal), stream)));
            fieldInfo3.SetValue(objResult, temp3);
            object temp4 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo4.SetValue(objResult, temp4);
            object temp5 = ((Tax)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Tax), stream)));
            fieldInfo5.SetValue(objResult, temp5);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine).GetField("<Price>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine).GetField("<ProductId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo3 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine).GetField("<Quantity>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo4 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine).GetField("<SalesOrderId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo5 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.AddLine).GetField("<Tax>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_TaxSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static UnleashedDDD_Contracts_TaxSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Tax input = ((UnleashedDDD.Contracts.Tax)(original));
            UnleashedDDD.Contracts.Tax result = ((UnleashedDDD.Contracts.Tax)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Tax))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Id)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Decimal)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Rate)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Tax input = ((UnleashedDDD.Contracts.Tax)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Id, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rate, stream, typeof(Decimal));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Tax result = ((UnleashedDDD.Contracts.Tax)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Tax))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Decimal), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Tax), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Tax).GetField("<Id>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Tax).GetField("<Rate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_PriceSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static UnleashedDDD_Contracts_PriceSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Price input = ((UnleashedDDD.Contracts.Price)(original));
            UnleashedDDD.Contracts.Price result = ((UnleashedDDD.Contracts.Price)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Price))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Decimal)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Amount)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = input.Currency;
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Price input = ((UnleashedDDD.Contracts.Price)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Amount, stream, typeof(Decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Currency, stream, typeof(String));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Price result = ((UnleashedDDD.Contracts.Price)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Price))));
            object objResult = ((object)(result));
            object temp1 = ((Decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Decimal), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((String)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(String), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Price), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Price).GetField("<Amount>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Price).GetField("<Currency>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_RemoveLineSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_RemoveLineSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.LineId)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SalesOrderId)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.LineId, stream, typeof(Guid));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SalesOrderId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine).GetField("<LineId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.RemoveLine).GetField("<SalesOrderId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeSalesTaxSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        private static System.Reflection.FieldInfo fieldInfo2;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeSalesTaxSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Decimal)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.Rate)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.TaxId)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.Rate, stream, typeof(Decimal));
            Orleans.Serialization.SerializationManager.SerializeInner(input.TaxId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax))));
            object objResult = ((object)(result));
            object temp1 = ((Decimal)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Decimal), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            object temp2 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo2.SetValue(objResult, temp2);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax).GetField("<Rate>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
            fieldInfo2 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesTax).GetField("<TaxId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeSalespersonSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeSalespersonSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SalespersonId)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SalespersonId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeSalesperson).GetField("<SalespersonId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeWarehouseSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_ChangeWarehouseSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.WarehouseId)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.WarehouseId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.ChangeWarehouse).GetField("<WarehouseId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
    
    [Orleans.RegisterSerializerAttribute()]
    internal class UnleashedDDD_Contracts_Sales_SalesOrder_Commands_CompleteSalesOrderSerialization
    {
        
        private static System.Reflection.FieldInfo fieldInfo1;
        
        static UnleashedDDD_Contracts_Sales_SalesOrder_Commands_CompleteSalesOrderSerialization()
        {
            Register();
        }
        
        public static object DeepCopier(object original)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder)(original));
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder))));
            Orleans.Serialization.SerializationContext.Current.RecordObject(original, result);
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeepCopyInner(input.SalesOrderId)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Serializer(object untypedInput, Orleans.Serialization.BinaryTokenStreamWriter stream, System.Type expected)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder input = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder)(untypedInput));
            Orleans.Serialization.SerializationManager.SerializeInner(input.SalesOrderId, stream, typeof(Guid));
        }
        
        public static object Deserializer(System.Type expected, Orleans.Serialization.BinaryTokenStreamReader stream)
        {
            UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder result = ((UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder)(System.Runtime.Serialization.FormatterServices.GetUninitializedObject(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder))));
            object objResult = ((object)(result));
            object temp1 = ((Guid)(Orleans.Serialization.SerializationManager.DeserializeInner(typeof(Guid), stream)));
            fieldInfo1.SetValue(objResult, temp1);
            return objResult;
        }
        
        public static void Register()
        {
            Orleans.Serialization.SerializationManager.Register(typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder), DeepCopier, Serializer, Deserializer);
            fieldInfo1 = typeof(UnleashedDDD.Contracts.Sales.SalesOrder.Commands.CompleteSalesOrder).GetField("<SalesOrderId>k__BackingField", (System.Reflection.BindingFlags.Instance 
                            | (System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic)));
        }
    }
}
#pragma warning restore 162
#pragma warning restore 219
#pragma warning restore 693
#pragma warning restore 1591
#pragma warning restore 1998
#endif
